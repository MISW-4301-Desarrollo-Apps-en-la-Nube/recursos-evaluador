{
	"info": {
		"_postman_id": "acc08a3e-6202-45c9-8cef-2d5433031e42",
		"name": "[MISO] Entrega 2 - Verify RF003 Consistency",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "213032",
		"_collection_link": "https://dann33.postman.co/workspace/8d59fc5a-160d-46bf-8d08-66ac887e9ddf/collection/213032-acc08a3e-6202-45c9-8cef-2d5433031e42?action=share&source=collection_link&creator=213032"
	},
	"item": [
		{
			"name": "Reset",
			"item": [
				{
					"name": "Reset users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.response.text())"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_PATH}}/users/reset",
							"host": [
								"{{BASE_PATH}}"
							],
							"path": [
								"users",
								"reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset routes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.response.text())"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_PATH}}/routes/reset",
							"host": [
								"{{BASE_PATH}}"
							],
							"path": [
								"routes",
								"reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset posts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.response.text())"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_PATH}}/posts/reset",
							"host": [
								"{{BASE_PATH}}"
							],
							"path": [
								"posts",
								"reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset offers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.response.text())"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_PATH}}/offers/reset",
							"host": [
								"{{BASE_PATH}}"
							],
							"path": [
								"offers",
								"reset"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Crear recursos",
			"item": [
				{
					"name": "Creaci칩n de usuarios",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.response.text())",
									"let jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status should be 201\"] = responseCode.code == 201;",
									"tests[\"Response has id\"] = jsonData.id !== undefined;",
									"tests[\"Response has createdAt\"] = jsonData.createdAt !== undefined;",
									"",
									"if(jsonData.id) {",
									"    pm.collectionVariables.set('1_USER_ID', jsonData.id);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const email = pm.variables.replaceIn(\"{{$randomEmail}}\").toLowerCase();",
									"const username = pm.variables.replaceIn(\"{{$randomDomainWord}}\").toLowerCase();",
									"const password = pm.variables.replaceIn(\"{{$randomPassword}}\").toLowerCase();",
									"const dni = pm.variables.replaceIn(\"{{$randomInt}}\");",
									"const fullname = pm.variables.replaceIn(\"{{$randomFullName}}\").toLowerCase();",
									"const phonenumber = pm.variables.replaceIn(\"{{$randomPhoneNumber}}\").replaceAll('-', '');",
									"",
									"pm.collectionVariables.set('1_USER_EMAIL', email);",
									"pm.collectionVariables.set('1_USER_USERNAME', username);",
									"pm.collectionVariables.set('1_USER_PASSWORD', password);",
									"pm.collectionVariables.set('1_USER_DNI', dni);",
									"pm.collectionVariables.set('1_USER_FULLNAME', fullname);",
									"pm.collectionVariables.set('1_USER_PHONENUMBER', phonenumber);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{1_USER_USERNAME}}\",\n    \"password\": \"{{1_USER_PASSWORD}}\",\n    \"email\": \"{{1_USER_EMAIL}}\",\n    \"dni\": \"{{1_USER_DNI}}\",\n    \"fullName\": \"{{1_USER_FULLNAME}}\",\n    \"phoneNumber\": \"{{1_USER_PHONENUMBER}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_PATH}}/users",
							"host": [
								"{{BASE_PATH}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generaci칩n de token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.response.text())",
									"let jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status should be 200\"] = responseCode.code == 200;",
									"tests[\"Response has id\"] = jsonData.id !== undefined;",
									"tests[\"Response has token\"] = jsonData.token !== undefined;",
									"tests[\"Response has expireAt\"] = jsonData.expireAt !== undefined;",
									"",
									"if(jsonData.token) {",
									"    pm.collectionVariables.set('1_USER_TOKEN', jsonData.token);",
									"}",
									"",
									"if(jsonData.id) {",
									"    pm.collectionVariables.set('1_USER_ID', jsonData.id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{1_USER_USERNAME}}\",\n    \"password\": \"{{1_USER_PASSWORD}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_PATH}}/users/auth",
							"host": [
								"{{BASE_PATH}}"
							],
							"path": [
								"users",
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "RF-003 Crear publicacion",
			"item": [
				{
					"name": "Verificar error de integraci칩n",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.response.text())",
									"let jsonData = JSON.parse(responseBody);",
									"",
									"pm.test(\"Status code is 503\", function () {",
									"    pm.response.to.have.status(503);",
									"});",
									"tests[\"Should have msg\"] = jsonData.msg === \"El servicio est치 temporalmente fuera de servicio.\";"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let expireAt = new Date();",
									"(expireAt.setDate(expireAt.getDate() + 1));",
									"expireAt = expireAt.toISOString();",
									"",
									"pm.collectionVariables.set('POST_EXPIREAT', expireAt);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{1_USER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"flightId\": \"{{ROUTE_FLIGHTID}}\",\n    \"expireAt\": \"{{POST_EXPIREAT}}\",\n    \"plannedStartDate\": \"{{ROUTE_PLANNEDSTARTDATE}}\",\n    \"plannedEndDate\": \"{{ROUTE_PLANNEDENDDATE}}\",\n    \"origin\": {\n       \"airportCode\": \"{{ROUTE_SOURCEAIRPORTCODE}}\",\n       \"country\": \"{{ROUTE_SOURCECOUNTRY}}\"\n    },\n    \"destiny\": {\n       \"airportCode\": \"{{ROUTE_DESTINYAIRPORTCODE}}\",\n       \"country\": \"{{ROUTE_DESTINYCOUNTRY}}\"\n    },\n    \"bagCost\": {{ROUTE_BAGCOST}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_PATH}}/rf003/posts",
							"host": [
								"{{BASE_PATH}}"
							],
							"path": [
								"rf003",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verificar estado de trayectos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.response.text())",
									"let jsonData = JSON.parse(responseBody);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"tests[\"Should exist 0 routes\"] = jsonData.count === 0"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{1_USER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_PATH}}/routes/count",
							"host": [
								"{{BASE_PATH}}"
							],
							"path": [
								"routes",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verificar estado de publicaciones",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.response.text())",
									"let jsonData = JSON.parse(responseBody);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"tests[\"Should exist 0 posts\"] = jsonData.count === 0"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{1_USER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_PATH}}/posts/count",
							"host": [
								"{{BASE_PATH}}"
							],
							"path": [
								"posts",
								"count"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BASE_PATH",
			"value": "http://localhost:9000",
			"type": "string"
		}
	]
}